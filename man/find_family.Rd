% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_family.R
\name{find_family}
\alias{find_family}
\alias{find_parent}
\alias{find_children}
\alias{find_siblings}
\title{Find directories of a family}
\usage{
find_family(parent, family = "^[.]child$")

find_parent(parent = "..", family = "^[.]child$")

find_children(parent = ".", family = "^[.]child$")

find_siblings(parent = "..", family = "^[.]child$", self = FALSE)
}
\arguments{
\item{parent}{A string giving a single path to the parent directory. The
children directories should be nested one level under it.}

\item{family}{A regular expression to match the name of the file that defines
the family.}

\item{self}{Include the working directory in the output? Yes: \code{TRUE}; No:
\code{FALSE}.}
}
\value{
A character vector.
}
\description{
Find directories of a family
}
\examples{
library(fs)
library(withr)
library(family)

wd <- getwd()
on.exit(setwd(wd))

parent <- path(tempdir(), "parent")

child_a <- dir_create(path(parent, "child_a"))
child_b <- dir_create(path(parent, "child_b"))

# Add a file ".child" in the root each sibling under a parent directory
file_create(path(child_a, ".child"))
file_create(path(child_b, ".child"))

# Other directories will be ignored
neighbour <- dir_create(path(parent, "other"))

dir_tree(parent)

# From anywhere
find_family(parent, family = "^[.]child$")

# From the parent (using default `family = "^[.]child$")
setwd(parent)
find_children()

# From any child
setwd(child_a)
find_siblings()
find_siblings(self = TRUE)

setwd(child_b)
find_siblings()
find_parent()

setwd(wd)
}
