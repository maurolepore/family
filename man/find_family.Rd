% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_family.R
\name{find_family}
\alias{find_family}
\alias{find_parent}
\alias{find_children}
\alias{find_siblings}
\title{Find directories of a family}
\usage{
find_family(parent, family = getOption("family.family") \%||\% "^[.]family")

find_parent(parent = "..", family = "^[.]family$")

find_children(parent = ".", family = "^[.]family$")

find_siblings(parent = "..", family = "^[.]family$", self = FALSE)
}
\arguments{
\item{parent}{A string giving a single path to the parent directory. The
children directories should be nested one level under it.}

\item{family}{A regular expression to match the name of the file that defines
the family.}

\item{self}{Include the working directory in the output? Yes: \code{TRUE}; No:
\code{FALSE}.}
}
\value{
A character vector.
}
\description{
Find directories of a family
}
\examples{
library(fs)
library(withr)
library(family)

wd <- getwd()
on.exit(setwd(wd))

parent <- path(tempdir(), "parent")

me <- dir_create(path(parent, "me"))
sister <- dir_create(path(parent, "sister"))
brother <- dir_create(path(parent, "brother"))

# Add a file ".family" in the root each sibling under a parent directory
file_create(path(me, ".family"))
file_create(path(sister, ".family"))
file_create(path(brother, ".family"))

# Other directories will be ignored
neighbour <- dir_create(path(parent, "neighbour"))

dir_tree(parent)

# From anywhere
find_family(parent, family = "^[.]family$")

# From the parent (using default `family = "^[.]family$")
setwd(parent)
find_children()

# From a child
setwd(me)
find_siblings()
find_siblings(self = TRUE)
find_parent()

setwd(wd)
}
