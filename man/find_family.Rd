% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_family.R
\name{find_family}
\alias{find_family}
\alias{parent}
\alias{children}
\alias{siblings}
\title{Find directories of a family}
\usage{
find_family(parent, family = NULL)

parent(family = NULL)

children(family = NULL)

siblings(family = NULL, self = FALSE)
}
\arguments{
\item{parent}{A string giving a single path to the parent directory. The
children directories should be nested one level under it.}

\item{family}{A regular expression to match the name of the file that defines
the family. You may pass it directly of with "options()", e.g.
\code{options(family = ".us")}.}

\item{self}{Include the working directory in the output? Yes: \code{TRUE}; No:
\code{FALSE}.}
}
\value{
A character vector.
}
\description{
Find directories of a family
}
\examples{
library(fs)
library(family)

restore_working_directory <- getwd()

mother <- path(tempdir(), "mother")
us <- c("sister", "brother")
neighbour <- "neighbour"
dir_create(path(mother, c(us, neighbour)))

# Define the family with any identifying file in the root of each sibling
family_name <- ".us"
file_create(path(mother, us, ".us"))

dir_tree(mother, recurse = TRUE, all = TRUE)

# Find the family from anywhere
find_family(parent = mother, family = family_name)

# Find the family from the parent, the siblings or their neighbours
setwd(path(mother, "neighbour"))
siblings(family_name, self = TRUE)

setwd(path(mother, "sister"))
siblings(family_name, self = TRUE)

siblings(family_name)

# Save typing and reuse code with other families
restore_options <- options(family = family_name)
siblings()

parent()

setwd(parent())
children()

# Cleanup
options(restore_options)
setwd(restore_working_directory)
}
